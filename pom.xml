<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>rs.pelotas</groupId>
    <artifactId>tracker</artifactId>
    <version>0.1.0</version>
    <packaging>war</packaging>
    <name>Tracker :: pelotas.rs</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        
        <version.dependency.jboss.spec.javaee.7.0>1.0.0.Final</version.dependency.jboss.spec.javaee.7.0>
        <version.dependency.cdi>1.2</version.dependency.cdi>
        <version.dependency.jsf>2.2.10</version.dependency.jsf>
        <version.dependency.hibernate>5.1.3.Final</version.dependency.hibernate>
        <version.dependency.hibernate-metamodel>4.3.8.Final</version.dependency.hibernate-metamodel>
        <version.dependency.resteasy>3.0.11.Final</version.dependency.resteasy>
        <version.dependency.jackson>2.5.2</version.dependency.jackson>
        <version.dependency.junit>4.12</version.dependency.junit>
        <version.dependency.arquillian>1.1.7.Final</version.dependency.arquillian>
        <version.dependency.arquillian-container>8.2.0.Final</version.dependency.arquillian-container>
        
        <version.plugin.wildfly>1.0.2.Final</version.plugin.wildfly>
        <version.plugin.compiler>3.1</version.plugin.compiler>
        <version.plugin.surefire>2.16</version.plugin.surefire>
        <version.plugin.war>2.5</version.plugin.war>
        
        <maven.compiler.target>1.7</maven.compiler.target>
        <maven.compiler.source>1.7</maven.compiler.source>  
    </properties>

    <dependencies>
        <!-- Annotation API -->
        <dependency>
            <groupId>org.jboss.spec.javax.annotation</groupId>
            <artifactId>jboss-annotations-api_1.2_spec</artifactId>
            <version>${version.dependency.jboss.spec.javaee.7.0}</version>
            <scope>provided</scope>
        </dependency>
        <!-- /Annotation API -->
        
        <!-- EJB API -->
        <dependency>
            <groupId>org.jboss.spec.javax.ejb</groupId>
            <artifactId>jboss-ejb-api_3.2_spec</artifactId>
            <version>${version.dependency.jboss.spec.javaee.7.0}</version>
            <scope>provided</scope>
        </dependency>
        <!-- /EJB API -->
        
        <!-- JPA API -->
        <dependency>
            <groupId>org.hibernate.javax.persistence</groupId>
            <artifactId>hibernate-jpa-2.1-api</artifactId>
            <version>${version.dependency.jboss.spec.javaee.7.0}</version>
            <scope>provided</scope>
        </dependency>
        <!-- JPA 2.0 metamodel classes for typesafe criteria queries -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-jpamodelgen</artifactId>
            <version>${version.dependency.hibernate-metamodel}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator-annotation-processor</artifactId>
            <version>${version.dependency.hibernate}</version>
            <scope>provided</scope>
        </dependency>
        <!-- /JPA API -->

        <!-- /JTA API -->
        <dependency>
            <groupId>org.jboss.spec.javax.transaction</groupId>
            <artifactId>jboss-transaction-api_1.2_spec</artifactId>
            <version>${version.dependency.jboss.spec.javaee.7.0}</version>
            <scope>provided</scope>
        </dependency>
        <!-- /JTA API -->

        <!-- Bean Validation API -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>${version.dependency.hibernate}</version>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- /Bean Validation API -->

        <!-- Servlet API -->
        <dependency>
            <groupId>org.jboss.spec.javax.servlet</groupId>
            <artifactId>jboss-servlet-api_3.1_spec</artifactId>
            <version>${version.dependency.jboss.spec.javaee.7.0}</version>
            <scope>provided</scope>
        </dependency>
        <!-- /Servlet API -->
        
        <!-- JSF API -->
        <dependency>
            <groupId>org.jboss.spec.javax.faces</groupId>
            <artifactId>jboss-jsf-api_2.2_spec</artifactId>
            <version>${version.dependency.jsf}</version>
            <scope>provided</scope>
        </dependency>
        <!-- JSF API -->

        <!-- JSON API -->
        <dependency>
            <groupId>org.jboss.spec.javax.json</groupId>
            <artifactId>jboss-json-api_1.0_spec</artifactId>
            <version>${version.dependency.jboss.spec.javaee.7.0}</version>
            <scope>provided</scope>
        </dependency>
        <!-- /JSON API -->
        
        <!-- JAX-RS API -->
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>jaxrs-api</artifactId>
            <version>${version.dependency.resteasy}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-jaxrs</artifactId>
            <version>${version.dependency.resteasy}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-links</artifactId>
            <version>${version.dependency.resteasy}</version>
            <scope>provided</scope>
        </dependency>
        <!--
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-jaxb-provider</artifactId>
            <version>${version.dependency.resteasy}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-jettison-provider</artifactId>
            <version>${version.dependency.resteasy}</version>
            <scope>provided</scope>
        </dependency>
        -->
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-jackson2-provider</artifactId>
            <version>${version.dependency.resteasy}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${version.dependency.jackson}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${version.dependency.jackson}</version>
            <scope>provided</scope>
        </dependency>
        <!-- /JAX-RS API -->

        <!-- CDI API -->
        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <version>${version.dependency.cdi}</version>
            <scope>provided</scope>
        </dependency>
        <!-- /CDI API -->
        
        <!-- Concurrency API -->
        <dependency>
            <groupId>org.jboss.spec.javax.enterprise.concurrent</groupId>
            <artifactId>jboss-concurrency-api_1.0_spec</artifactId>
            <version>${version.dependency.jboss.spec.javaee.7.0}</version>
            <scope>provided</scope>
        </dependency>
        <!-- /Concurrency API -->
        
        <!-- Batch API -->
        <dependency>
            <groupId>org.jboss.spec.javax.batch</groupId>
            <artifactId>jboss-batch-api_1.0_spec</artifactId>
            <version>${version.dependency.jboss.spec.javaee.7.0}</version>
            <scope>provided</scope>
        </dependency>
        <!-- /Batch API -->
        
        <!-- JUnit -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${version.dependency.junit}</version>
            <scope>test</scope>
        </dependency>
        <!-- /JUnit -->
        
        <!-- Arquillian -->
        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <version>${version.dependency.arquillian}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.protocol</groupId>
            <artifactId>arquillian-protocol-servlet</artifactId>
            <version>${version.dependency.arquillian}</version>
            <scope>test</scope>
        </dependency>
        <!-- /Arquillian -->
    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>${version.plugin.war}</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>

            <!-- mvn package wildfly:deploy -->
            <plugin>
                <groupId>org.wildfly.plugins</groupId>
                <artifactId>wildfly-maven-plugin</artifactId>
                <version>${version.plugin.wildfly}</version>
                <configuration>
                    <hostname>${wildfly-hostname}</hostname>
                    <port>${wildfly-port}</port>
                    <username>${wildfly-username}</username>
                    <password>${wildfly-password}</password>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <!-- The default profile skips all tests, though you can tune 
            it to run just unit tests based on a custom pattern -->
            <!-- Seperate profiles are provided for running all tests, including 
            Arquillian tests that execute in the specified container -->
            <id>localhost</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <wildfly-home>C:\DEV\Servers\wildfly-8.2.0.Final</wildfly-home>
                <wildfly-hostname>127.0.0.1</wildfly-hostname>
                <wildfly-port>9990</wildfly-port>
                <wildfly-username>wildfly</wildfly-username>
                <wildfly-password>wildfly</wildfly-password>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${version.plugin.surefire}</version>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <!-- An optional Arquillian testing profile that executes tests in your WildFly instance -->
            <!-- This profile will start a new WildFly instance, and execute the test, shutting it down when done -->
            <!-- Run with: mvn clean test -Parq-wildfly-managed -->
            <id>arq-wildfly-managed</id>
            <dependencies>
                <dependency>
                    <groupId>org.wildfly</groupId>
                    <artifactId>wildfly-arquillian-container-managed</artifactId>
                    <version>${version.dependency.arquillian-container}</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <!-- An optional Arquillian testing profile that executes tests in a remote WildFly instance -->
            <!-- Run with: mvn clean test -Parq-wildfly-remote -->
            <id>arq-wildfly-remote</id>
            <dependencies>
                <dependency>
                    <groupId>org.wildfly</groupId>
                    <artifactId>wildfly-arquillian-container-remote</artifactId>
                    <version>${version.dependency.arquillian-container}</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
        </profile>
        
        <profile>
            <!-- When built in OpenShift the 'openshift' profile will be used when invoking mvn. -->
            <!-- Use this profile for any OpenShift specific customization your app will need. -->
            <!-- By default that is to put the resulting archive into the 'deployments' folder. -->
            <!-- http://maven.apache.org/guides/mini/guide-building-for-different-environments.html -->
            <id>openshift</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-war-plugin</artifactId>
                        <version>${version.plugin.war}</version>
                        <configuration>
                            <outputDirectory>deployments</outputDirectory>
                            <warName>ROOT</warName>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>